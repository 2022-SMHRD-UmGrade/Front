// Generated by view binder compiler. Do not edit!
package com.example.umgrade.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ScrollView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.constraintlayout.widget.Guideline;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.umgrade.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityEventPostBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final ConstraintLayout constraintLayout2;

  @NonNull
  public final ConstraintLayout constraintLayout4;

  @NonNull
  public final View divider7;

  @NonNull
  public final TextView eventPost;

  @NonNull
  public final TextView eventPost2;

  @NonNull
  public final TextView eventPostCnt;

  @NonNull
  public final TextView eventPostContent;

  @NonNull
  public final TextView eventPostSeq;

  @NonNull
  public final TextView eventPostTime;

  @NonNull
  public final TextView eventPostTitle;

  @NonNull
  public final Guideline guideline11;

  @NonNull
  public final ScrollView scrollView5;

  private ActivityEventPostBinding(@NonNull ConstraintLayout rootView,
      @NonNull ConstraintLayout constraintLayout2, @NonNull ConstraintLayout constraintLayout4,
      @NonNull View divider7, @NonNull TextView eventPost, @NonNull TextView eventPost2,
      @NonNull TextView eventPostCnt, @NonNull TextView eventPostContent,
      @NonNull TextView eventPostSeq, @NonNull TextView eventPostTime,
      @NonNull TextView eventPostTitle, @NonNull Guideline guideline11,
      @NonNull ScrollView scrollView5) {
    this.rootView = rootView;
    this.constraintLayout2 = constraintLayout2;
    this.constraintLayout4 = constraintLayout4;
    this.divider7 = divider7;
    this.eventPost = eventPost;
    this.eventPost2 = eventPost2;
    this.eventPostCnt = eventPostCnt;
    this.eventPostContent = eventPostContent;
    this.eventPostSeq = eventPostSeq;
    this.eventPostTime = eventPostTime;
    this.eventPostTitle = eventPostTitle;
    this.guideline11 = guideline11;
    this.scrollView5 = scrollView5;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityEventPostBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityEventPostBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_event_post, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityEventPostBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.constraintLayout2;
      ConstraintLayout constraintLayout2 = ViewBindings.findChildViewById(rootView, id);
      if (constraintLayout2 == null) {
        break missingId;
      }

      id = R.id.constraintLayout4;
      ConstraintLayout constraintLayout4 = ViewBindings.findChildViewById(rootView, id);
      if (constraintLayout4 == null) {
        break missingId;
      }

      id = R.id.divider7;
      View divider7 = ViewBindings.findChildViewById(rootView, id);
      if (divider7 == null) {
        break missingId;
      }

      id = R.id.eventPost;
      TextView eventPost = ViewBindings.findChildViewById(rootView, id);
      if (eventPost == null) {
        break missingId;
      }

      id = R.id.eventPost2;
      TextView eventPost2 = ViewBindings.findChildViewById(rootView, id);
      if (eventPost2 == null) {
        break missingId;
      }

      id = R.id.eventPostCnt;
      TextView eventPostCnt = ViewBindings.findChildViewById(rootView, id);
      if (eventPostCnt == null) {
        break missingId;
      }

      id = R.id.eventPostContent;
      TextView eventPostContent = ViewBindings.findChildViewById(rootView, id);
      if (eventPostContent == null) {
        break missingId;
      }

      id = R.id.eventPostSeq;
      TextView eventPostSeq = ViewBindings.findChildViewById(rootView, id);
      if (eventPostSeq == null) {
        break missingId;
      }

      id = R.id.eventPostTime;
      TextView eventPostTime = ViewBindings.findChildViewById(rootView, id);
      if (eventPostTime == null) {
        break missingId;
      }

      id = R.id.eventPostTitle;
      TextView eventPostTitle = ViewBindings.findChildViewById(rootView, id);
      if (eventPostTitle == null) {
        break missingId;
      }

      id = R.id.guideline11;
      Guideline guideline11 = ViewBindings.findChildViewById(rootView, id);
      if (guideline11 == null) {
        break missingId;
      }

      id = R.id.scrollView5;
      ScrollView scrollView5 = ViewBindings.findChildViewById(rootView, id);
      if (scrollView5 == null) {
        break missingId;
      }

      return new ActivityEventPostBinding((ConstraintLayout) rootView, constraintLayout2,
          constraintLayout4, divider7, eventPost, eventPost2, eventPostCnt, eventPostContent,
          eventPostSeq, eventPostTime, eventPostTitle, guideline11, scrollView5);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
