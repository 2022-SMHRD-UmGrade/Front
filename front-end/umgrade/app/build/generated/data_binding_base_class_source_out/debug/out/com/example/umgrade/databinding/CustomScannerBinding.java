// Generated by view binder compiler. Do not edit!
package com.example.umgrade.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.constraintlayout.widget.Guideline;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.umgrade.R;
import com.journeyapps.barcodescanner.BarcodeView;
import com.journeyapps.barcodescanner.ViewfinderView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class CustomScannerBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Guideline guideline12;

  @NonNull
  public final TextView tvScanner;

  @NonNull
  public final BarcodeView zxingBarcodeSurface;

  @NonNull
  public final ViewfinderView zxingViewfinderView;

  private CustomScannerBinding(@NonNull ConstraintLayout rootView, @NonNull Guideline guideline12,
      @NonNull TextView tvScanner, @NonNull BarcodeView zxingBarcodeSurface,
      @NonNull ViewfinderView zxingViewfinderView) {
    this.rootView = rootView;
    this.guideline12 = guideline12;
    this.tvScanner = tvScanner;
    this.zxingBarcodeSurface = zxingBarcodeSurface;
    this.zxingViewfinderView = zxingViewfinderView;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static CustomScannerBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static CustomScannerBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.custom_scanner, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static CustomScannerBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.guideline12;
      Guideline guideline12 = ViewBindings.findChildViewById(rootView, id);
      if (guideline12 == null) {
        break missingId;
      }

      id = R.id.tvScanner;
      TextView tvScanner = ViewBindings.findChildViewById(rootView, id);
      if (tvScanner == null) {
        break missingId;
      }

      id = R.id.zxing_barcode_surface;
      BarcodeView zxingBarcodeSurface = ViewBindings.findChildViewById(rootView, id);
      if (zxingBarcodeSurface == null) {
        break missingId;
      }

      id = R.id.zxing_viewfinder_view;
      ViewfinderView zxingViewfinderView = ViewBindings.findChildViewById(rootView, id);
      if (zxingViewfinderView == null) {
        break missingId;
      }

      return new CustomScannerBinding((ConstraintLayout) rootView, guideline12, tvScanner,
          zxingBarcodeSurface, zxingViewfinderView);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
