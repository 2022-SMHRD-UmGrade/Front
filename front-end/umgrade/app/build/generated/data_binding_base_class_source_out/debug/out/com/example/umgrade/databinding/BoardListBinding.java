// Generated by view binder compiler. Do not edit!
package com.example.umgrade.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.umgrade.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class BoardListBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final ConstraintLayout boardListItem;

  @NonNull
  public final TextView boardNick;

  @NonNull
  public final TextView boardSeq;

  @NonNull
  public final TextView boardTime;

  @NonNull
  public final TextView boardTitle;

  private BoardListBinding(@NonNull ConstraintLayout rootView,
      @NonNull ConstraintLayout boardListItem, @NonNull TextView boardNick,
      @NonNull TextView boardSeq, @NonNull TextView boardTime, @NonNull TextView boardTitle) {
    this.rootView = rootView;
    this.boardListItem = boardListItem;
    this.boardNick = boardNick;
    this.boardSeq = boardSeq;
    this.boardTime = boardTime;
    this.boardTitle = boardTitle;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static BoardListBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static BoardListBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.board_list, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static BoardListBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      ConstraintLayout boardListItem = (ConstraintLayout) rootView;

      id = R.id.boardNick;
      TextView boardNick = ViewBindings.findChildViewById(rootView, id);
      if (boardNick == null) {
        break missingId;
      }

      id = R.id.boardSeq;
      TextView boardSeq = ViewBindings.findChildViewById(rootView, id);
      if (boardSeq == null) {
        break missingId;
      }

      id = R.id.boardTime;
      TextView boardTime = ViewBindings.findChildViewById(rootView, id);
      if (boardTime == null) {
        break missingId;
      }

      id = R.id.boardTitle;
      TextView boardTitle = ViewBindings.findChildViewById(rootView, id);
      if (boardTitle == null) {
        break missingId;
      }

      return new BoardListBinding((ConstraintLayout) rootView, boardListItem, boardNick, boardSeq,
          boardTime, boardTitle);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
