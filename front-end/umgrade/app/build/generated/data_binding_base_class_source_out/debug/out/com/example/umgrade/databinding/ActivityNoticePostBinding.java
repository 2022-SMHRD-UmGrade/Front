// Generated by view binder compiler. Do not edit!
package com.example.umgrade.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ScrollView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.constraintlayout.widget.Guideline;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.umgrade.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityNoticePostBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final ConstraintLayout constraintLayout2;

  @NonNull
  public final ConstraintLayout constraintLayout4;

  @NonNull
  public final View divider7;

  @NonNull
  public final Guideline guideline11;

  @NonNull
  public final TextView noticePost;

  @NonNull
  public final TextView noticePost2;

  @NonNull
  public final TextView noticePostCnt;

  @NonNull
  public final TextView noticePostContent;

  @NonNull
  public final TextView noticePostSeq;

  @NonNull
  public final TextView noticePostTime;

  @NonNull
  public final TextView noticePostTitle;

  @NonNull
  public final ScrollView scrollView5;

  private ActivityNoticePostBinding(@NonNull ConstraintLayout rootView,
      @NonNull ConstraintLayout constraintLayout2, @NonNull ConstraintLayout constraintLayout4,
      @NonNull View divider7, @NonNull Guideline guideline11, @NonNull TextView noticePost,
      @NonNull TextView noticePost2, @NonNull TextView noticePostCnt,
      @NonNull TextView noticePostContent, @NonNull TextView noticePostSeq,
      @NonNull TextView noticePostTime, @NonNull TextView noticePostTitle,
      @NonNull ScrollView scrollView5) {
    this.rootView = rootView;
    this.constraintLayout2 = constraintLayout2;
    this.constraintLayout4 = constraintLayout4;
    this.divider7 = divider7;
    this.guideline11 = guideline11;
    this.noticePost = noticePost;
    this.noticePost2 = noticePost2;
    this.noticePostCnt = noticePostCnt;
    this.noticePostContent = noticePostContent;
    this.noticePostSeq = noticePostSeq;
    this.noticePostTime = noticePostTime;
    this.noticePostTitle = noticePostTitle;
    this.scrollView5 = scrollView5;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityNoticePostBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityNoticePostBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_notice_post, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityNoticePostBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.constraintLayout2;
      ConstraintLayout constraintLayout2 = ViewBindings.findChildViewById(rootView, id);
      if (constraintLayout2 == null) {
        break missingId;
      }

      id = R.id.constraintLayout4;
      ConstraintLayout constraintLayout4 = ViewBindings.findChildViewById(rootView, id);
      if (constraintLayout4 == null) {
        break missingId;
      }

      id = R.id.divider7;
      View divider7 = ViewBindings.findChildViewById(rootView, id);
      if (divider7 == null) {
        break missingId;
      }

      id = R.id.guideline11;
      Guideline guideline11 = ViewBindings.findChildViewById(rootView, id);
      if (guideline11 == null) {
        break missingId;
      }

      id = R.id.noticePost;
      TextView noticePost = ViewBindings.findChildViewById(rootView, id);
      if (noticePost == null) {
        break missingId;
      }

      id = R.id.noticePost2;
      TextView noticePost2 = ViewBindings.findChildViewById(rootView, id);
      if (noticePost2 == null) {
        break missingId;
      }

      id = R.id.noticePostCnt;
      TextView noticePostCnt = ViewBindings.findChildViewById(rootView, id);
      if (noticePostCnt == null) {
        break missingId;
      }

      id = R.id.noticePostContent;
      TextView noticePostContent = ViewBindings.findChildViewById(rootView, id);
      if (noticePostContent == null) {
        break missingId;
      }

      id = R.id.noticePostSeq;
      TextView noticePostSeq = ViewBindings.findChildViewById(rootView, id);
      if (noticePostSeq == null) {
        break missingId;
      }

      id = R.id.noticePostTime;
      TextView noticePostTime = ViewBindings.findChildViewById(rootView, id);
      if (noticePostTime == null) {
        break missingId;
      }

      id = R.id.noticePostTitle;
      TextView noticePostTitle = ViewBindings.findChildViewById(rootView, id);
      if (noticePostTitle == null) {
        break missingId;
      }

      id = R.id.scrollView5;
      ScrollView scrollView5 = ViewBindings.findChildViewById(rootView, id);
      if (scrollView5 == null) {
        break missingId;
      }

      return new ActivityNoticePostBinding((ConstraintLayout) rootView, constraintLayout2,
          constraintLayout4, divider7, guideline11, noticePost, noticePost2, noticePostCnt,
          noticePostContent, noticePostSeq, noticePostTime, noticePostTitle, scrollView5);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
