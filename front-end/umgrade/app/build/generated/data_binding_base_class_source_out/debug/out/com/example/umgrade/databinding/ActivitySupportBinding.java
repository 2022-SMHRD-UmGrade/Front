// Generated by view binder compiler. Do not edit!
package com.example.umgrade.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.umgrade.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivitySupportBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Button btnSupportWrite;

  @NonNull
  public final View divider15;

  @NonNull
  public final ImageView imageView;

  @NonNull
  public final LinearLayout linearLayout;

  @NonNull
  public final LinearLayout linearLayout2;

  @NonNull
  public final RecyclerView rvSupportBoard;

  @NonNull
  public final TextView tvSupportTitle;

  private ActivitySupportBinding(@NonNull ConstraintLayout rootView,
      @NonNull Button btnSupportWrite, @NonNull View divider15, @NonNull ImageView imageView,
      @NonNull LinearLayout linearLayout, @NonNull LinearLayout linearLayout2,
      @NonNull RecyclerView rvSupportBoard, @NonNull TextView tvSupportTitle) {
    this.rootView = rootView;
    this.btnSupportWrite = btnSupportWrite;
    this.divider15 = divider15;
    this.imageView = imageView;
    this.linearLayout = linearLayout;
    this.linearLayout2 = linearLayout2;
    this.rvSupportBoard = rvSupportBoard;
    this.tvSupportTitle = tvSupportTitle;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivitySupportBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivitySupportBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_support, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivitySupportBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btnSupportWrite;
      Button btnSupportWrite = ViewBindings.findChildViewById(rootView, id);
      if (btnSupportWrite == null) {
        break missingId;
      }

      id = R.id.divider15;
      View divider15 = ViewBindings.findChildViewById(rootView, id);
      if (divider15 == null) {
        break missingId;
      }

      id = R.id.imageView;
      ImageView imageView = ViewBindings.findChildViewById(rootView, id);
      if (imageView == null) {
        break missingId;
      }

      id = R.id.linearLayout;
      LinearLayout linearLayout = ViewBindings.findChildViewById(rootView, id);
      if (linearLayout == null) {
        break missingId;
      }

      id = R.id.linearLayout2;
      LinearLayout linearLayout2 = ViewBindings.findChildViewById(rootView, id);
      if (linearLayout2 == null) {
        break missingId;
      }

      id = R.id.rvSupportBoard;
      RecyclerView rvSupportBoard = ViewBindings.findChildViewById(rootView, id);
      if (rvSupportBoard == null) {
        break missingId;
      }

      id = R.id.tvSupportTitle;
      TextView tvSupportTitle = ViewBindings.findChildViewById(rootView, id);
      if (tvSupportTitle == null) {
        break missingId;
      }

      return new ActivitySupportBinding((ConstraintLayout) rootView, btnSupportWrite, divider15,
          imageView, linearLayout, linearLayout2, rvSupportBoard, tvSupportTitle);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
