// Generated by view binder compiler. Do not edit!
package com.example.umgrade.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import androidx.viewpager.widget.ViewPager;
import com.example.umgrade.R;
import com.google.android.material.tabs.TabItem;
import com.google.android.material.tabs.TabLayout;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityNoticeBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final TabLayout noticeTab;

  @NonNull
  public final TabItem tabEvent;

  @NonNull
  public final TabItem tabNotice;

  @NonNull
  public final ViewPager tabViewpager;

  private ActivityNoticeBinding(@NonNull ConstraintLayout rootView, @NonNull TabLayout noticeTab,
      @NonNull TabItem tabEvent, @NonNull TabItem tabNotice, @NonNull ViewPager tabViewpager) {
    this.rootView = rootView;
    this.noticeTab = noticeTab;
    this.tabEvent = tabEvent;
    this.tabNotice = tabNotice;
    this.tabViewpager = tabViewpager;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityNoticeBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityNoticeBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_notice, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityNoticeBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.noticeTab;
      TabLayout noticeTab = ViewBindings.findChildViewById(rootView, id);
      if (noticeTab == null) {
        break missingId;
      }

      id = R.id.tabEvent;
      TabItem tabEvent = ViewBindings.findChildViewById(rootView, id);
      if (tabEvent == null) {
        break missingId;
      }

      id = R.id.tabNotice;
      TabItem tabNotice = ViewBindings.findChildViewById(rootView, id);
      if (tabNotice == null) {
        break missingId;
      }

      id = R.id.tabViewpager;
      ViewPager tabViewpager = ViewBindings.findChildViewById(rootView, id);
      if (tabViewpager == null) {
        break missingId;
      }

      return new ActivityNoticeBinding((ConstraintLayout) rootView, noticeTab, tabEvent, tabNotice,
          tabViewpager);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
