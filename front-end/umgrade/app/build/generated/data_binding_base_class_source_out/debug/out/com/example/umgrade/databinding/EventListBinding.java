// Generated by view binder compiler. Do not edit!
package com.example.umgrade.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.constraintlayout.widget.Guideline;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.umgrade.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class EventListBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final TextView eventDash;

  @NonNull
  public final TextView eventEnd;

  @NonNull
  public final TextView eventSeq;

  @NonNull
  public final TextView eventStart;

  @NonNull
  public final TextView eventTitle;

  @NonNull
  public final Guideline guideline10;

  @NonNull
  public final Guideline guideline9;

  private EventListBinding(@NonNull ConstraintLayout rootView, @NonNull TextView eventDash,
      @NonNull TextView eventEnd, @NonNull TextView eventSeq, @NonNull TextView eventStart,
      @NonNull TextView eventTitle, @NonNull Guideline guideline10, @NonNull Guideline guideline9) {
    this.rootView = rootView;
    this.eventDash = eventDash;
    this.eventEnd = eventEnd;
    this.eventSeq = eventSeq;
    this.eventStart = eventStart;
    this.eventTitle = eventTitle;
    this.guideline10 = guideline10;
    this.guideline9 = guideline9;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static EventListBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static EventListBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.event_list, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static EventListBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.eventDash;
      TextView eventDash = ViewBindings.findChildViewById(rootView, id);
      if (eventDash == null) {
        break missingId;
      }

      id = R.id.eventEnd;
      TextView eventEnd = ViewBindings.findChildViewById(rootView, id);
      if (eventEnd == null) {
        break missingId;
      }

      id = R.id.eventSeq;
      TextView eventSeq = ViewBindings.findChildViewById(rootView, id);
      if (eventSeq == null) {
        break missingId;
      }

      id = R.id.eventStart;
      TextView eventStart = ViewBindings.findChildViewById(rootView, id);
      if (eventStart == null) {
        break missingId;
      }

      id = R.id.eventTitle;
      TextView eventTitle = ViewBindings.findChildViewById(rootView, id);
      if (eventTitle == null) {
        break missingId;
      }

      id = R.id.guideline10;
      Guideline guideline10 = ViewBindings.findChildViewById(rootView, id);
      if (guideline10 == null) {
        break missingId;
      }

      id = R.id.guideline9;
      Guideline guideline9 = ViewBindings.findChildViewById(rootView, id);
      if (guideline9 == null) {
        break missingId;
      }

      return new EventListBinding((ConstraintLayout) rootView, eventDash, eventEnd, eventSeq,
          eventStart, eventTitle, guideline10, guideline9);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
